{"ast":null,"code":"import _defineProperty from \"/Users/alexb/gihub-finder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SEARCH_USERS, GET_USER, CLEAR_USERS, GET_REPOS, SET_LOADING, SET_ALERT } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case SEARCH_USERS:\n      return _objectSpread({}, state, {\n        users: action.payload,\n        loading: false\n      });\n\n    case GET_USER:\n      return _objectSpread({}, state, {\n        user: action.payload,\n        loading: false\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_REPOS:\n      return _objectSpread({}, state, {\n        repos: action.payload,\n        loading: false\n      });\n\n    case CLEAR_USERS:\n      return _objectSpread({}, state, {\n        users: []\n      });\n\n    case SET_ALERT:\n      return _objectSpread({}, state, {\n        msg: action.payload.msg,\n        type: action.payload.type\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/context/github/githubReducer.js"],"names":["SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","SET_ALERT","state","action","type","users","payload","loading","user","repos","msg"],"mappings":";;;;;;AAAA,SACEA,YADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,WALF,EAMEC,SANF,QAOO,UAPP;AASA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,YAAL;AACE,+BACKM,KADL;AAEEG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAFhB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKV,QAAL;AACE,+BACKK,KADL;AAEEM,QAAAA,IAAI,EAAEL,MAAM,CAACG,OAFf;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKP,WAAL;AACE,+BACKE,KADL;AAEEK,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKR,SAAL;AACE,+BACKG,KADL;AAEEO,QAAAA,KAAK,EAAEN,MAAM,CAACG,OAFhB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKT,WAAL;AACE,+BACKI,KADL;AAEEG,QAAAA,KAAK,EAAE;AAFT;;AAIF,SAAKJ,SAAL;AACE,+BACKC,KADL;AAEEQ,QAAAA,GAAG,EAAEP,MAAM,CAACG,OAAP,CAAeI,GAFtB;AAGEN,QAAAA,IAAI,EAAED,MAAM,CAACG,OAAP,CAAeF;AAHvB;;AAKF;AACE,aAAOF,KAAP;AApCJ;AAsCD,CAvCD","sourcesContent":["import {\n  SEARCH_USERS,\n  GET_USER,\n  CLEAR_USERS,\n  GET_REPOS,\n  SET_LOADING,\n  SET_ALERT\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SEARCH_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false\n      };\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: action.payload,\n        loading: false\n      };\n    case CLEAR_USERS:\n      return {\n        ...state,\n        users: []\n      };\n    case SET_ALERT:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        type: action.payload.type\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}