{"ast":null,"code":"import _slicedToArray from \"/Users/alexb/gihub-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexb/gihub-finder/src/App.js\";\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport './components/layouts/Navbar';\nimport Navbar from './components/layouts/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport axios from 'axios';\nimport Alert from './components/layouts/Alert';\nimport About from './components/pages/About';\n\nconst App = () => {\n  const _useState = useState([], {}, false, null, []),\n        _useState2 = _slicedToArray(_useState, 10),\n        users = _useState2[0],\n        setUsers = _useState2[1],\n        user = _useState2[2],\n        setUser = _useState2[3],\n        loading = _useState2[4],\n        setLoading = _useState2[5],\n        alert = _useState2[6],\n        setAlert = _useState2[7],\n        repos = _useState2[8],\n        setRepos = _useState2[9]; // async componentDidMount() {\n  //   this.setState({ loading: true });\n  //   const res = await axios.get(\n  //     `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n  //   );\n  //   this.setState({ users: res.data, loading: false });\n  // }\n  //Search Users from GitHub\n\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(text, \"&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setUsers(res.data.items);\n    setLoading(false);\n  }; //Get user\n\n\n  const getUser = async userName => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(userName, \"?client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setUser(res.data);\n    setLoading(false);\n  }; //Get user repos\n\n\n  const getUserRepos = async userName => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(userName, \"/repos?per_page=5&sort=created:asc&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setRepos(res.data);\n    setLoading(false);\n  }; //Clear users array\n\n\n  const clearUsers = () => {\n    setUsers([]);\n  }; //set validation method\n\n\n  const setAlert1 = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    tittle: \" GitHub Finder\",\n    icon: \"fab fa-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    alert: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Search, {\n      searchUsers: searchUsers,\n      clearUsers: clearUsers,\n      showClear: users.length > 0 ? true : false,\n      setAlert: setAlert1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Users, {\n      loading: loading,\n      users: users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      user: user,\n      repos: repos,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","axios","Alert","About","App","users","setUsers","user","setUser","loading","setLoading","alert","setAlert","repos","setRepos","searchUsers","text","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","userName","getUserRepos","clearUsers","setAlert1","msg","type","setTimeout","props","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAO,WAAP;AACA,OAAO,6BAAP;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBAYZZ,QAAQ,CAAC,EAAD,EAAK,EAAL,EAAS,KAAT,EAAgB,IAAhB,EAAsB,EAAtB,CAZI;AAAA;AAAA,QAEda,KAFc;AAAA,QAGdC,QAHc;AAAA,QAIdC,IAJc;AAAA,QAKdC,OALc;AAAA,QAMdC,OANc;AAAA,QAOdC,UAPc;AAAA,QAQdC,KARc;AAAA,QASdC,QATc;AAAA,QAUdC,KAVc;AAAA,QAWdC,QAXc,kBAchB;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;;;AACA,QAAMC,WAAW,GAAG,MAAMC,IAAN,IAAc;AAChCN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,iDACyBF,IADzB,wBAC2CG,OAAO,CAACC,GAAR,CAAYC,0BADvD,4BACmGF,OAAO,CAACC,GAAR,CAAYE,8BAD/G,EAAlB;AAIAhB,IAAAA,QAAQ,CAACW,GAAG,CAACM,IAAJ,CAASC,KAAV,CAAR;AACAd,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GARD,CAzBgB,CAmChB;;;AACA,QAAMe,OAAO,GAAG,MAAMC,QAAN,IAAkB;AAChChB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,wCACgBQ,QADhB,wBACsCP,OAAO,CAACC,GAAR,CAAYC,0BADlD,4BAC8FF,OAAO,CAACC,GAAR,CAAYE,8BAD1G,EAAlB;AAIAd,IAAAA,OAAO,CAACS,GAAG,CAACM,IAAL,CAAP;AACAb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GARD,CApCgB,CA8ChB;;;AACA,QAAMiB,YAAY,GAAG,MAAMD,QAAN,IAAkB;AACrChB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,wCACgBQ,QADhB,0DACwEP,OAAO,CAACC,GAAR,CAAYC,0BADpF,4BACgIF,OAAO,CAACC,GAAR,CAAYE,8BAD5I,EAAlB;AAIAR,IAAAA,QAAQ,CAACG,GAAG,CAACM,IAAL,CAAR;AACAb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GARD,CA/CgB,CAyDhB;;;AACA,QAAMkB,UAAU,GAAG,MAAM;AACvBtB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD,CA1DgB,CA8DhB;;;AACA,QAAMuB,SAAS,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC/BnB,IAAAA,QAAQ,CAAC;AAAEkB,MAAAA,GAAG,EAAEA,GAAP;AAAYC,MAAAA,IAAI,EAAEA;AAAlB,KAAD,CAAR;AAEAC,IAAAA,UAAU,CAAC,MAAMpB,QAAQ,CAAC,IAAD,CAAf,EAAuB,IAAvB,CAAV;AACD,GAJD;;AAMA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,gBAAf;AAAgC,IAAA,IAAI,EAAC,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,MAAM,EAAEsB,KAAK,IACX,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAElB,WADf;AAEE,MAAA,UAAU,EAAEa,UAFd;AAGE,MAAA,SAAS,EAAEvB,KAAK,CAAC6B,MAAN,GAAe,CAAf,GAAmB,IAAnB,GAA0B,KAHvC;AAIE,MAAA,QAAQ,EAAEL,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEpB,OAAhB;AAAyB,MAAA,KAAK,EAAEJ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAgBE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEF,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,MAAM,EAAE8B,KAAK,IACX,oBAAC,IAAD,oBACMA,KADN;AAEE,MAAA,OAAO,EAAER,OAFX;AAGE,MAAA,YAAY,EAAEE,YAHhB;AAIE,MAAA,IAAI,EAAEpB,IAJR;AAKE,MAAA,KAAK,EAAEM,KALT;AAME,MAAA,OAAO,EAAEJ,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CAFF,CAFF,CADF,CADF;AA0CD,CA/GD;;AAiHA,eAAeL,GAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport './components/layouts/Navbar';\nimport Navbar from './components/layouts/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport axios from 'axios';\nimport Alert from './components/layouts/Alert';\nimport About from './components/pages/About';\n\nconst App = () => {\n  const [\n    users,\n    setUsers,\n    user,\n    setUser,\n    loading,\n    setLoading,\n    alert,\n    setAlert,\n    repos,\n    setRepos\n  ] = useState([], {}, false, null, []);\n\n  // async componentDidMount() {\n  //   this.setState({ loading: true });\n\n  //   const res = await axios.get(\n  //     `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n  //   );\n\n  //   this.setState({ users: res.data, loading: false });\n  // }\n\n  //Search Users from GitHub\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setUsers(res.data.items);\n    setLoading(false);\n  };\n\n  //Get user\n  const getUser = async userName => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/users/${userName}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setUser(res.data);\n    setLoading(false);\n  };\n\n  //Get user repos\n  const getUserRepos = async userName => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/users/${userName}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  //Clear users array\n  const clearUsers = () => {\n    setUsers([]);\n  };\n\n  //set validation method\n  const setAlert1 = (msg, type) => {\n    setAlert({ msg: msg, type: type });\n\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar tittle=' GitHub Finder' icon='fab fa-github' />\n        <div className='container'>\n          <Alert alert={alert} />\n          <Switch>\n            <Route\n              exact\n              path='/'\n              render={props => (\n                <Fragment>\n                  <Search\n                    searchUsers={searchUsers}\n                    clearUsers={clearUsers}\n                    showClear={users.length > 0 ? true : false}\n                    setAlert={setAlert1}\n                  />\n                  <Users loading={loading} users={users} />\n                </Fragment>\n              )}\n            />\n            <Route exact path='/about' component={About} />\n            <Route\n              exact\n              path='/user/:login'\n              render={props => (\n                <User\n                  {...props}\n                  getUser={getUser}\n                  getUserRepos={getUserRepos}\n                  user={user}\n                  repos={repos}\n                  loading={loading}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}