{"ast":null,"code":"var _jsxFileName = \"/Users/alexb/gihub-finder/src/App.js\";\nimport React, { Fragment, Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport './components/layouts/Navbar';\nimport Navbar from './components/layouts/Navbar';\nimport Users from './components/users/Users';\nimport Search from './components/users/Search';\nimport axios from 'axios';\nimport Alert from './components/layouts/Alert';\nimport About from './components/pages/About';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(text, \"&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n      console.log(res.data);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        users: []\n      });\n    };\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg: msg,\n          type: type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          users = _this$state.users,\n          loading = _this$state.loading;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      tittle: \" GitHub Finder\",\n      icon: \"fab fa-github\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      alert: this.state.alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Users, {\n        loading: loading,\n        users: this.state.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/App.js"],"names":["React","Fragment","Component","BrowserRouter","Router","Switch","Route","Navbar","Users","Search","axios","Alert","About","App","state","users","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","console","log","data","items","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport './components/layouts/Navbar';\nimport Navbar from './components/layouts/Navbar';\nimport Users from './components/users/Users';\nimport Search from './components/users/Search';\nimport axios from 'axios';\nimport Alert from './components/layouts/Alert';\nimport About from './components/pages/About';\n\nclass App extends Component {\n  state = {\n    users: [],\n    loading: false,\n    alert: null\n  };\n\n  // async componentDidMount() {\n  //   this.setState({ loading: true });\n\n  //   const res = await axios.get(\n  //     `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n  //   );\n\n  //   this.setState({ users: res.data, loading: false });\n  // }\n\n  //Search Users from GitHub\n  searchUsers = async text => {\n    this.setState({ loading: true });\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    console.log(res.data);\n    this.setState({ users: res.data.items, loading: false });\n  };\n\n  //Clear users array\n  clearUsers = () => {\n    this.setState({ users: [] });\n  };\n\n  //set validation method\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg: msg, type: type } });\n\n    setTimeout(() => this.setState({ alert: null }), 5000);\n  };\n\n  render() {\n    const { users, loading } = this.state;\n    return (\n      <Router>\n        <div className='App'>\n          <Navbar tittle=' GitHub Finder' icon='fab fa-github' />\n          <div className='container'>\n            <Alert alert={this.state.alert} />\n            <Switch>\n              <Route\n                exact\n                path='/'\n                render={props => (\n                  <Fragment>\n                    <Search\n                      searchUsers={this.searchUsers}\n                      clearUsers={this.clearUsers}\n                      showClear={users.length > 0 ? true : false}\n                      setAlert={this.setAlert}\n                    />\n                    <Users loading={loading} users={this.state.users} />\n                  </Fragment>\n                )}\n              />\n              <Route exact path='/about' component={About} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}