{"ast":null,"code":"var _jsxFileName = \"/Users/alexb/gihub-finder/src/components/users/User.js\";\nimport React, { Fragment, Component } from 'react';\nimport Spinner from '../layouts/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nexport class User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  render() {\n    const _this$props$user = this.props.user,\n          name = _this$props$user.name,\n          avatar_url = _this$props$user.avatar_url,\n          location = _this$props$user.location,\n          bio = _this$props$user.bio,\n          blog = _this$props$user.blog,\n          login = _this$props$user.login,\n          html_url = _this$props$user.html_url,\n          followers = _this$props$user.followers,\n          following = _this$props$user.following,\n          public_repos = _this$props$user.public_repos,\n          public_gists = _this$props$user.public_gists,\n          hireable = _this$props$user.hireable;\n    const loading = this.props.loading.loading;\n\n    if (loading) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"btn btn-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Back to Seatch\"), \"Hirebale:\", '', hireable ? React.createElement(\"i\", {\n        className: \"fas fa-check text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        className: \"fas fa-times-circle text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card grid-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"all-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: avatar_url,\n        alt: \"avatar\",\n        className: \"round-img\",\n        style: {\n          width: '150px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, location)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, bio && React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Bio\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, bio)), React.createElement(\"a\", {\n        href: html_url,\n        className: \"btn btn-dark my-1 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Visit GitHub Profile\"))));\n    }\n  }\n\n}\nUser.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/components/users/User.js"],"names":["React","Fragment","Component","Spinner","PropTypes","Link","User","componentDidMount","props","getUser","match","params","login","render","user","name","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","loading","width","propTypes","bool","isRequired","object","func"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Spinner from '../layouts/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport class User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    user: PropTypes.object.isRequired,\n    getUser: PropTypes.func.isRequired\n  };\n  render() {\n    const {\n      name,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable\n    } = this.props.user;\n\n    const { loading } = this.props.loading;\n\n    if (loading) {\n      return <Spinner />;\n    } else {\n      return (\n        <Fragment>\n          <Link to='/' className='btn btn-light'>\n            Back to Seatch\n          </Link>\n          Hirebale:{''}\n          {hireable ? (\n            <i className='fas fa-check text-success'></i>\n          ) : (\n            <i className='fas fa-times-circle text-danger'></i>\n          )}\n          <div className='card grid-2'>\n            <div className='all-center'>\n              <img\n                src={avatar_url}\n                alt='avatar'\n                className='round-img'\n                style={{ width: '150px' }}\n              />\n              <h1>{name}</h1>\n              <p>{location}</p>\n            </div>\n            <div>\n              {bio && (\n                <Fragment>\n                  <h3>Bio</h3>\n                  <p>{bio}</p>\n                </Fragment>\n              )}\n              <a href={html_url} className='btn btn-dark my-1 '>\n                Visit GitHub Profile\n              </a>\n            </div>\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}