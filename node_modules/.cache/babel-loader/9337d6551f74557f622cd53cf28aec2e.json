{"ast":null,"code":"import _slicedToArray from \"/Users/alexb/gihub-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexb/gihub-finder/src/components/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axsios from 'axsios';\nimport GitHubContext from './githubContext';\nimport GitHubReducer from './githubReducer';\nimport { SEARCH_USERS, GET_USER, CLEAR_USERS, GET_REPOS } from '../types'; // SET_LOADING,\n// SET_ALERT,\n// REMOVE_ALERT\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const _useReducer = useReducer(GitHubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Search Users\n  //Get User\n  //Get Repos\n  // Clear Users\n  //Set Loading\n\n\n  return React.createElement(GitHubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/components/context/github/GithubState.js"],"names":["React","useReducer","axsios","GitHubContext","GitHubReducer","SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,WAAjC,EAA8CC,SAA9C,QAA+D,UAA/D,C,CACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,KAAK,EAAE,EAHY;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAArB;;AAD2B,sBAQDd,UAAU,CAACG,aAAD,EAAgBO,YAAhB,CART;AAAA;AAAA,QAQpBK,KARoB;AAAA,QAQbC,QARa,oBAU3B;AAEA;AAEA;AAEA;AAEA;;;AAEA,SACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHR;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD;AAJV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGL,KAAK,CAACQ,QART,CADF;AAYD,CAhCD;;AAkCA,eAAeT,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axsios from 'axsios';\nimport GitHubContext from './githubContext';\nimport GitHubReducer from './githubReducer';\nimport { SEARCH_USERS, GET_USER, CLEAR_USERS, GET_REPOS } from '../types';\n// SET_LOADING,\n// SET_ALERT,\n// REMOVE_ALERT\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const [state, dispatch] = useReducer(GitHubReducer, initialState);\n\n  //Search Users\n\n  //Get User\n\n  //Get Repos\n\n  // Clear Users\n\n  //Set Loading\n\n  return (\n    <GitHubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading\n      }}\n    >\n      {props.children}\n    </GitHubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}