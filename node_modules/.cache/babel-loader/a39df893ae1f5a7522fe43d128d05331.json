{"ast":null,"code":"import _slicedToArray from \"/Users/alexb/gihub-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexb/gihub-finder/src/App.js\";\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layouts/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport axios from 'axios';\nimport Alert from './components/layouts/Alert';\nimport About from './components/pages/About';\nimport GitHubState from './components/context/github/GithubState';\nimport './App.css';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        repos = _useState6[0],\n        setRepos = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alert = _useState10[0],\n        setAlert = _useState10[1]; // async componentDidMount() {\n  //   this.setState({ loading: true });\n  //   const res = await axios.get(\n  //     `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n  //   );\n  //   this.setState({ users: res.data, loading: false });\n  // }\n  //Search Users from GitHub\n  //Get user\n\n\n  const getUser = async userName => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(userName, \"?client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setUser(res.data);\n    setLoading(false);\n  }; //Get user repos\n\n\n  const getUserRepos = async userName => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(userName, \"/repos?per_page=5&sort=created:asc&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setRepos(res.data);\n    setLoading(false);\n  }; //Clear users array\n\n\n  const clearUsers = () => {\n    setUsers([]);\n  }; //Set validation method\n\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return React.createElement(GitHubState, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    tittle: \" GitHub Finder\",\n    icon: \"fab fa-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    alert: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Search, {\n      clearUsers: clearUsers,\n      showClear: users.length > 0 ? true : false,\n      setAlert: showAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Users, {\n      loading: loading,\n      users: users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      user: user,\n      repos: repos,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","axios","Alert","About","GitHubState","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","getUser","userName","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","getUserRepos","clearUsers","showAlert","msg","type","setTimeout","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layouts/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport axios from 'axios';\nimport Alert from './components/layouts/Alert';\nimport About from './components/pages/About';\n\nimport GitHubState from './components/context/github/GithubState';\n\nimport './App.css';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  // async componentDidMount() {\n  //   this.setState({ loading: true });\n\n  //   const res = await axios.get(\n  //     `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n  //   );\n\n  //   this.setState({ users: res.data, loading: false });\n  // }\n\n  //Search Users from GitHub\n\n  //Get user\n  const getUser = async userName => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/users/${userName}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setUser(res.data);\n    setLoading(false);\n  };\n\n  //Get user repos\n  const getUserRepos = async userName => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/users/${userName}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  //Clear users array\n  const clearUsers = () => {\n    setUsers([]);\n  };\n\n  //Set validation method\n  const showAlert = (msg, type) => {\n    setAlert({ msg: msg, type: type });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return (\n    <GitHubState>\n      <Router>\n        <div className='App'>\n          <Navbar tittle=' GitHub Finder' icon='fab fa-github' />\n          <div className='container'>\n            <Alert alert={alert} />\n            <Switch>\n              <Route\n                exact\n                path='/'\n                render={props => (\n                  <Fragment>\n                    <Search\n                      clearUsers={clearUsers}\n                      showClear={users.length > 0 ? true : false}\n                      setAlert={showAlert}\n                    />\n                    <Users loading={loading} users={users} />\n                  </Fragment>\n                )}\n              />\n              <Route exact path='/about' component={About} />\n              <Route\n                exact\n                path='/user/:login'\n                render={props => (\n                  <User\n                    {...props}\n                    getUser={getUser}\n                    getUserRepos={getUserRepos}\n                    user={user}\n                    repos={repos}\n                    loading={loading}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </GitHubState>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}