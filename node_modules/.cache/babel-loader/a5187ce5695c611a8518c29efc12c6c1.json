{"ast":null,"code":"var _jsxFileName = \"/Users/alexb/gihub-finder/src/components/users/User.js\";\nimport React, { Fragment, Component } from 'react';\nimport Spinner from '../layouts/Spinner';\nimport PropTypes from 'prop-types';\nexport class User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  render() {\n    const _this$props$user = this.props.user,\n          name = _this$props$user.name,\n          avatar_url = _this$props$user.avatar_url,\n          location = _this$props$user.location,\n          bio = _this$props$user.bio,\n          blog = _this$props$user.blog,\n          login = _this$props$user.login,\n          html_url = _this$props$user.html_url,\n          followers = _this$props$user.followers,\n          following = _this$props$user.following,\n          public_repos = _this$props$user.public_repos,\n          public_gists = _this$props$user.public_gists,\n          hirebale = _this$props$user.hirebale;\n    const loading = this.props.loading.loading;\n\n    if (loading) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, name);\n    }\n  }\n\n}\nUser.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/components/users/User.js"],"names":["React","Fragment","Component","Spinner","PropTypes","User","componentDidMount","props","getUser","match","params","login","render","user","name","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hirebale","loading","propTypes","bool","isRequired","object","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAClCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,KAA3C;AACD;;AAMDC,EAAAA,MAAM,GAAG;AAAA,6BAcH,KAAKL,KAAL,CAAWM,IAdR;AAAA,UAELC,IAFK,oBAELA,IAFK;AAAA,UAGLC,UAHK,oBAGLA,UAHK;AAAA,UAILC,QAJK,oBAILA,QAJK;AAAA,UAKLC,GALK,oBAKLA,GALK;AAAA,UAMLC,IANK,oBAMLA,IANK;AAAA,UAOLP,KAPK,oBAOLA,KAPK;AAAA,UAQLQ,QARK,oBAQLA,QARK;AAAA,UASLC,SATK,oBASLA,SATK;AAAA,UAULC,SAVK,oBAULA,SAVK;AAAA,UAWLC,YAXK,oBAWLA,YAXK;AAAA,UAYLC,YAZK,oBAYLA,YAZK;AAAA,UAaLC,QAbK,oBAaLA,QAbK;AAAA,UAgBCC,OAhBD,GAgBa,KAAKlB,KAAL,CAAWkB,OAhBxB,CAgBCA,OAhBD;;AAkBP,QAAIA,OAAJ,EAAa;AACX,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,aAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWX,IAAX,CAAP;AACD;AACF;;AAhCiC;AAAvBT,I,CAIJqB,S,GAAY;AACjBD,EAAAA,OAAO,EAAErB,SAAS,CAACuB,IAAV,CAAeC,UADP;AAEjBf,EAAAA,IAAI,EAAET,SAAS,CAACyB,MAAV,CAAiBD,UAFN;AAGjBpB,EAAAA,OAAO,EAAEJ,SAAS,CAAC0B,IAAV,CAAeF;AAHP,C;AA+BrB,eAAevB,IAAf","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Spinner from '../layouts/Spinner';\nimport PropTypes from 'prop-types';\n\nexport class User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    user: PropTypes.object.isRequired,\n    getUser: PropTypes.func.isRequired\n  };\n  render() {\n    const {\n      name,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hirebale\n    } = this.props.user;\n\n    const { loading } = this.props.loading;\n\n    if (loading) {\n      return <Spinner />;\n    } else {\n      return <Fragment>{name}</Fragment>;\n    }\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}