{"ast":null,"code":"import _slicedToArray from \"/Users/alexb/gihub-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexb/gihub-finder/src/components/users/Search.js\";\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport GitHubContext from '../context/github/githubContext';\n\nconst Search = ({\n  clearUsers,\n  showClear,\n  setAlert\n}) => {\n  const gitHubContext = useContext(GitHubContext);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const onSubmit = e => {\n    e.preventDefault(); // prevent update of the page\n\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      gitHubContext.searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    action: \"\",\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search...\",\n    value: text,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/components/users/Search.js"],"names":["React","useState","useContext","PropTypes","GitHubContext","Search","clearUsers","showClear","setAlert","gitHubContext","text","setText","onSubmit","e","preventDefault","searchUsers","onChange","target","value","propTypes","func","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAAD,KAAyC;AACtD,QAAMC,aAAa,GAAGP,UAAU,CAACE,aAAD,CAAhC;;AADsD,oBAE9BH,QAAQ,CAAC,EAAD,CAFsB;AAAA;AAAA,QAE/CS,IAF+C;AAAA,QAEzCC,OAFyC;;AAItD,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF,GADoB,CACA;;AACpB,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACfF,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACD,KAFD,MAEO;AACLC,MAAAA,aAAa,CAACM,WAAd,CAA0BL,IAA1B;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GARD;;AASA,QAAMK,QAAQ,GAAGH,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAA7B;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEN,QAAhB;AAA0B,IAAA,MAAM,EAAC,EAAjC;AAAoC,IAAA,SAAS,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,KAAK,EAAEF,IAJT;AAKE,IAAA,QAAQ,EAAEM,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGT,SAAS,IACR;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAED,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAuBD,CAtCD;;AAwCAD,MAAM,CAACc,SAAP,GAAmB;AACjBb,EAAAA,UAAU,EAAEH,SAAS,CAACiB,IAAV,CAAeC,UADV;AAEjBd,EAAAA,SAAS,EAAEJ,SAAS,CAACmB,IAAV,CAAeD,UAFT;AAGjBb,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,IAAV,CAAeC;AAHR,CAAnB;AAMA,eAAehB,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport GitHubContext from '../context/github/githubContext';\n\nconst Search = ({ clearUsers, showClear, setAlert }) => {\n  const gitHubContext = useContext(GitHubContext);\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault(); // prevent update of the page\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      gitHubContext.searchUsers(text);\n      setText('');\n    }\n  };\n  const onChange = e => setText(e.target.value);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} action='' className='form'>\n        <input\n          type='text'\n          name='text'\n          placeholder='Search...'\n          value={text}\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          value='Search'\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {showClear && (\n        <button className='btn btn-light btn-block' onClick={clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}