{"ast":null,"code":"var _jsxFileName = \"/Users/alexb/gihub-finder/src/components/users/Search.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({\n  clearUsers,\n  showClear\n}) => {\n  state = {\n    text: ''\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // prevent update of the page\n\n    if (this.state.text === '') {\n      this.props.setAlert('Please enter something', 'light');\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({\n        text: ''\n      });\n    }\n  };\n\n  const onChange = e => this.setState({\n    [e.target.name]: e.target.value\n  });\n\n  retern(React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: this.onSubmit,\n    action: \"\",\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search...\",\n    value: this.state.text,\n    onChange: this.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","clearUsers","showClear","state","text","onSubmit","e","preventDefault","props","setAlert","searchUsers","setState","onChange","target","name","value","retern","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA+B;AAC5CC,EAAAA,KAAK,GAAG;AACNC,IAAAA,IAAI,EAAE;AADA,GAAR;;AAIA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF,GADoB,CACA;;AACpB,QAAI,KAAKJ,KAAL,CAAWC,IAAX,KAAoB,EAAxB,EAA4B;AAC1B,WAAKI,KAAL,CAAWC,QAAX,CAAoB,wBAApB,EAA8C,OAA9C;AACD,KAFD,MAEO;AACL,WAAKD,KAAL,CAAWE,WAAX,CAAuB,KAAKP,KAAL,CAAWC,IAAlC;AACA,WAAKO,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;AACF,GARD;;AASA,QAAMQ,QAAQ,GAAGN,CAAC,IAAI,KAAKK,QAAL,CAAc;AAAE,KAACL,CAAC,CAACO,MAAF,CAASC,IAAV,GAAiBR,CAAC,CAACO,MAAF,CAASE;AAA5B,GAAd,CAAtB;;AAEAC,EAAAA,MAAM,CACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAE,KAAKX,QAArB;AAA+B,IAAA,MAAM,EAAC,EAAtC;AAAyC,IAAA,SAAS,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAJpB;AAKE,IAAA,QAAQ,EAAE,KAAKQ,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGV,SAAS,IACR;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAED,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADI,CAAN;AAuBD,CAvCD;;AAyCAD,MAAM,CAACiB,SAAP,GAAmB;AACjBP,EAAAA,WAAW,EAAEX,SAAS,CAACmB,IAAV,CAAeC,UADX;AAEjBlB,EAAAA,UAAU,EAAEF,SAAS,CAACmB,IAAV,CAAeC,UAFV;AAGjBjB,EAAAA,SAAS,EAAEH,SAAS,CAACqB,IAAV,CAAeD,UAHT;AAIjBV,EAAAA,QAAQ,EAAEV,SAAS,CAACmB,IAAV,CAAeC;AAJR,CAAnB;AAOA,eAAenB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({ clearUsers, showClear }) => {\n  state = {\n    text: ''\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // prevent update of the page\n    if (this.state.text === '') {\n      this.props.setAlert('Please enter something', 'light');\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({ text: '' });\n    }\n  };\n  const onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  retern(\n    <div>\n      <form onSubmit={this.onSubmit} action='' className='form'>\n        <input\n          type='text'\n          name='text'\n          placeholder='Search...'\n          value={this.state.text}\n          onChange={this.onChange}\n        />\n        <input\n          type='submit'\n          value='Search'\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {showClear && (\n        <button className='btn btn-light btn-block' onClick={clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}