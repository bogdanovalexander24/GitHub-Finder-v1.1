{"ast":null,"code":"import _slicedToArray from \"/Users/alexb/gihub-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexb/gihub-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GitHubContext from './githubContext';\nimport GitHubReducer from './githubReducer';\nimport { SEARCH_USERS, GET_USER, CLEAR_USERS, GET_REPOS, SET_LOADING } from '../types'; // SET_ALERT,\n// REMOVE_ALERT\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const _useReducer = useReducer(GitHubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Search Users\n\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(text, \"&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; //Get User\n\n\n  const getUser = async userName => {\n    setLoading();\n    const res = await axios.get(\"https://api.github.com/users/\".concat(userName, \"?client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; //Get Repos\n  // Clear Users\n\n\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS\n    });\n  }; //Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return React.createElement(GitHubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GitHubContext","GitHubReducer","SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","type","payload","data","items","getUser","userName","clearUsers","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACEC,YADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,WALF,QAMO,UANP,C,CAQA;AACA;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,KAAK,EAAE,EAHY;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAArB;;AAD2B,sBAQDf,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CART;AAAA;AAAA,QAQpBK,KARoB;AAAA,QAQbC,QARa,oBAU3B;;;AACA,QAAMC,WAAW,GAAG,MAAMC,IAAN,IAAc;AAChCC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,iDACyBH,IADzB,wBAC2CI,OAAO,CAACC,GAAR,CAAYC,0BADvD,4BACmGF,OAAO,CAACC,GAAR,CAAYE,8BAD/G,EAAlB;AAIAT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEvB,YADC;AAEPwB,MAAAA,OAAO,EAAEP,GAAG,CAACQ,IAAJ,CAASC;AAFX,KAAD,CAAR;AAID,GAVD,CAX2B,CAuB3B;;;AACA,QAAMC,OAAO,GAAG,MAAMC,QAAN,IAAkB;AAChCZ,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,wCACgBU,QADhB,wBACsCT,OAAO,CAACC,GAAR,CAAYC,0BADlD,4BAC8FF,OAAO,CAACC,GAAR,CAAYE,8BAD1G,EAAlB;AAIAT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEtB,QADC;AAEPuB,MAAAA,OAAO,EAAEP,GAAG,CAACQ;AAFN,KAAD,CAAR;AAID,GAVD,CAxB2B,CAoC3B;AAEA;;;AACA,QAAMI,UAAU,GAAG,MAAM;AACvBhB,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAErB;AADC,KAAD,CAAR;AAGD,GAJD,CAvC2B,CA6C3B;;;AACA,QAAMc,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAEnB;AAAR,GAAD,CAAjC;;AAEA,SACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHR;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJV;AAKLG,MAAAA,WALK;AAMLe,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGvB,KAAK,CAACwB,QAVT,CADF;AAcD,CA9DD;;AAgEA,eAAezB,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GitHubContext from './githubContext';\nimport GitHubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  GET_USER,\n  CLEAR_USERS,\n  GET_REPOS,\n  SET_LOADING\n} from '../types';\n\n// SET_ALERT,\n// REMOVE_ALERT\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const [state, dispatch] = useReducer(GitHubReducer, initialState);\n\n  //Search Users\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  };\n\n  //Get User\n  const getUser = async userName => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${userName}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  };\n\n  //Get Repos\n\n  // Clear Users\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS\n    });\n  };\n\n  //Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  return (\n    <GitHubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers\n      }}\n    >\n      {props.children}\n    </GitHubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}