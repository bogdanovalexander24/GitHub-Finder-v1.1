{"ast":null,"code":"var _jsxFileName = \"/Users/alexb/gihub-finder/src/components/users/User.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport Spinner from '../layouts/Spinner';\nimport Repos from '../repos/Repos';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst User = ({\n  user,\n  repos,\n  loading,\n  getUser,\n  getUserRepos,\n  match\n}) => {\n  useEffect(() => {\n    const login = match.params.login;\n    getUser(login);\n    getUserRepos(login);\n  }, []);\n  const name = user.name,\n        avatar_url = user.avatar_url,\n        location = user.location,\n        bio = user.bio,\n        blog = user.blog,\n        company = user.company,\n        login = user.login,\n        html_url = user.html_url,\n        followers = user.followers,\n        following = user.following,\n        public_repos = user.public_repos,\n        public_gists = user.public_gists,\n        hireable = user.hireable;\n\n  if (loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Back to Seatch\"), \"Hirebale:\", '', hireable ? React.createElement(\"i\", {\n      className: \"fas fa-check text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"fas fa-times-circle text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card grid-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: avatar_url,\n      alt: \"avatar\",\n      className: \"round-img\",\n      style: {\n        width: '150px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, location)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, bio && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Bio\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, bio)), React.createElement(\"a\", {\n      href: html_url,\n      className: \"btn btn-dark my-1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Visit GitHub Profile\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, login && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Username: \"), login)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, company && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Company: \"), company)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, blog && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"WebSite: \"), blog))))), React.createElement(\"div\", {\n      className: \"card text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"badge badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Followers: \", followers), React.createElement(\"div\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Following: \", following), React.createElement(\"div\", {\n      className: \"badge badge-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Public Repos: \", public_repos), React.createElement(\"div\", {\n      className: \"badge badge-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Public gists: \", public_gists)), React.createElement(Repos, {\n      repos: repos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n};\n\nUser.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUserRepos: PropTypes.func.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/components/users/User.js"],"names":["React","Fragment","useEffect","Spinner","Repos","PropTypes","Link","User","user","repos","loading","getUser","getUserRepos","match","login","params","name","avatar_url","location","bio","blog","company","html_url","followers","following","public_repos","public_gists","hireable","width","propTypes","bool","isRequired","object","array","func"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport Spinner from '../layouts/Spinner';\nimport Repos from '../repos/Repos';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst User = ({ user, repos, loading, getUser, getUserRepos, match }) => {\n  useEffect(() => {\n    const login = match.params.login;\n    getUser(login);\n    getUserRepos(login);\n  }, []);\n\n  const {\n    name,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    company,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable\n  } = user;\n\n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <Fragment>\n        <Link to='/' className='btn btn-light'>\n          Back to Seatch\n        </Link>\n        Hirebale:{''}\n        {hireable ? (\n          <i className='fas fa-check text-success'></i>\n        ) : (\n          <i className='fas fa-times-circle text-danger'></i>\n        )}\n        <div className='card grid-2'>\n          <div className='all-center'>\n            <img\n              src={avatar_url}\n              alt='avatar'\n              className='round-img'\n              style={{ width: '150px' }}\n            />\n            <h1>{name}</h1>\n            <p>{location}</p>\n          </div>\n          <div>\n            {bio && (\n              <Fragment>\n                <h3>Bio</h3>\n                <p>{bio}</p>\n              </Fragment>\n            )}\n            <a href={html_url} className='btn btn-dark my-1 '>\n              Visit GitHub Profile\n            </a>\n            <ul>\n              <li>\n                {login && (\n                  <Fragment>\n                    <strong>Username: </strong>\n                    {login}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {company && (\n                  <Fragment>\n                    <strong>Company: </strong>\n                    {company}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {blog && (\n                  <Fragment>\n                    <strong>WebSite: </strong>\n                    {blog}\n                  </Fragment>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className='card text-center'>\n          <div className='badge badge-primary'>Followers: {followers}</div>\n          <div className='badge badge-success'>Following: {following}</div>\n          <div className='badge badge-light'>Public Repos: {public_repos}</div>\n          <div className='badge badge-dark'>Public gists: {public_gists}</div>\n        </div>\n        <Repos repos={repos} />\n      </Fragment>\n    );\n  }\n};\n\nUser.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUserRepos: PropTypes.func.isRequired\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}