{"ast":null,"code":"import _slicedToArray from \"/Users/alexb/gihub-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexb/gihub-finder/src/components/users/Search.js\";\nimport React, { useState, useContext } from 'react';\nimport GitHubContext from '../../context/github/githubContext';\nimport AlertContext from '../../context/alert/alertContex';\n\nconst Search = () => {\n  const githubContext = useContext(GitHubContext);\n  const alertContext = useContext(AlertContext);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const showClear = githubContext.users.length > 0 ? true : false;\n  const clearUsers = githubContext.clearUsers,\n        searchUsers = githubContext.searchUsers;\n  const setAlert = alertContext.setAlert;\n\n  const onSubmit = e => {\n    e.preventDefault(); // prevent update of the page\n\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    action: \"\",\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search...\",\n    value: text,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/components/users/Search.js"],"names":["React","useState","useContext","GitHubContext","AlertContext","Search","githubContext","alertContext","text","setText","showClear","users","length","clearUsers","searchUsers","setAlert","onSubmit","e","preventDefault","onChange","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,aAAa,GAAGJ,UAAU,CAACC,aAAD,CAAhC;AACA,QAAMI,YAAY,GAAGL,UAAU,CAACE,YAAD,CAA/B;;AAFmB,oBAIKH,QAAQ,CAAC,EAAD,CAJb;AAAA;AAAA,QAIZO,IAJY;AAAA,QAINC,OAJM;;AAKnB,QAAMC,SAAS,GAAGJ,aAAa,CAACK,KAAd,CAAoBC,MAApB,GAA6B,CAA7B,GAAiC,IAAjC,GAAwC,KAA1D;AALmB,QAMXC,UANW,GAMiBP,aANjB,CAMXO,UANW;AAAA,QAMCC,WAND,GAMiBR,aANjB,CAMCQ,WAND;AAAA,QAOXC,QAPW,GAOER,YAPF,CAOXQ,QAPW;;AASnB,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF,GADoB,CACA;;AACpB,QAAIV,IAAI,KAAK,EAAb,EAAiB;AACfO,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACD,KAFD,MAEO;AACLD,MAAAA,WAAW,CAACN,IAAD,CAAX;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GARD;;AASA,QAAMU,QAAQ,GAAGF,CAAC,IAAIR,OAAO,CAACQ,CAAC,CAACG,MAAF,CAASC,KAAV,CAA7B;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEL,QAAhB;AAA0B,IAAA,MAAM,EAAC,EAAjC;AAAoC,IAAA,SAAS,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,KAAK,EAAER,IAJT;AAKE,IAAA,QAAQ,EAAEW,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGT,SAAS,IACR;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEG,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAuBD,CA3CD;;AA6CA,eAAeR,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport GitHubContext from '../../context/github/githubContext';\nimport AlertContext from '../../context/alert/alertContex';\n\nconst Search = () => {\n  const githubContext = useContext(GitHubContext);\n  const alertContext = useContext(AlertContext);\n\n  const [text, setText] = useState('');\n  const showClear = githubContext.users.length > 0 ? true : false;\n  const { clearUsers, searchUsers } = githubContext;\n  const { setAlert } = alertContext;\n\n  const onSubmit = e => {\n    e.preventDefault(); // prevent update of the page\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      searchUsers(text);\n      setText('');\n    }\n  };\n  const onChange = e => setText(e.target.value);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} action='' className='form'>\n        <input\n          type='text'\n          name='text'\n          placeholder='Search...'\n          value={text}\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          value='Search'\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {showClear && (\n        <button className='btn btn-light btn-block' onClick={clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}