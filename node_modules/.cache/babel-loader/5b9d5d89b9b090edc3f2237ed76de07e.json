{"ast":null,"code":"var _jsxFileName = \"/Users/alexb/gihub-finder/src/App.js\";\nimport React, { Fragment, Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport './components/layouts/Navbar';\nimport Navbar from './components/layouts/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport axios from 'axios';\nimport Alert from './components/layouts/Alert';\nimport About from './components/pages/About';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      loading: false,\n      alert: null,\n      repos: []\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(text, \"&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async userName => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"https://api.github.com/users/\".concat(userName, \"?client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.getUserRepos = async userName => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"https://api.github.com/users/\".concat(userName, \"/repos?per_page=5&sort=created:asc&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n      this.setState({\n        repos: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        users: []\n      });\n    };\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg: msg,\n          type: type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          users = _this$state.users,\n          user = _this$state.user,\n          repos = _this$state.repos,\n          loading = _this$state.loading;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      tittle: \" GitHub Finder\",\n      icon: \"fab fa-github\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      alert: this.state.alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Users, {\n        loading: loading,\n        users: this.state.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user/:login\",\n      render: props => React.createElement(User, Object.assign({}, props, {\n        getUser: this.getUser,\n        getUserRepos: this.getUserRepos,\n        user: user,\n        repos: repos,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/App.js"],"names":["React","Fragment","Component","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","axios","Alert","About","App","state","users","user","loading","alert","repos","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","userName","getUserRepos","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport './components/layouts/Navbar';\nimport Navbar from './components/layouts/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport axios from 'axios';\nimport Alert from './components/layouts/Alert';\nimport About from './components/pages/About';\n\nclass App extends Component {\n  state = {\n    users: [],\n    user: {},\n    loading: false,\n    alert: null,\n    repos: []\n  };\n\n  // async componentDidMount() {\n  //   this.setState({ loading: true });\n\n  //   const res = await axios.get(\n  //     `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n  //   );\n\n  //   this.setState({ users: res.data, loading: false });\n  // }\n\n  //Search Users from GitHub\n  searchUsers = async text => {\n    this.setState({ loading: true });\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    this.setState({ users: res.data.items, loading: false });\n  };\n\n  //Get user\n  getUser = async userName => {\n    this.setState({ loading: true });\n    const res = await axios.get(\n      `https://api.github.com/users/${userName}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    this.setState({ user: res.data, loading: false });\n  };\n\n  //Get user repos\n  getUserRepos = async userName => {\n    this.setState({ loading: true });\n    const res = await axios.get(\n      `https://api.github.com/users/${userName}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    this.setState({ repos: res.data, loading: false });\n  };\n\n  //Clear users array\n  clearUsers = () => {\n    this.setState({ users: [] });\n  };\n\n  //set validation method\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg: msg, type: type } });\n\n    setTimeout(() => this.setState({ alert: null }), 5000);\n  };\n\n  render() {\n    const { users, user, repos, loading } = this.state;\n    return (\n      <Router>\n        <div className='App'>\n          <Navbar tittle=' GitHub Finder' icon='fab fa-github' />\n          <div className='container'>\n            <Alert alert={this.state.alert} />\n            <Switch>\n              <Route\n                exact\n                path='/'\n                render={props => (\n                  <Fragment>\n                    <Search\n                      searchUsers={this.searchUsers}\n                      clearUsers={this.clearUsers}\n                      showClear={users.length > 0 ? true : false}\n                      setAlert={this.setAlert}\n                    />\n                    <Users loading={loading} users={this.state.users} />\n                  </Fragment>\n                )}\n              />\n              <Route exact path='/about' component={About} />\n              <Route\n                exact\n                path='/user/:login'\n                render={props => (\n                  <User\n                    {...props}\n                    getUser={this.getUser}\n                    getUserRepos={this.getUserRepos}\n                    user={user}\n                    repos={repos}\n                    loading={loading}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}