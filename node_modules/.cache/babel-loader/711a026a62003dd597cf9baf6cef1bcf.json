{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alexb/gihub-finder/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alexb/gihub-finder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/alexb/gihub-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import axios from'axios';import GitHubContext from'./githubContext';import GitHubReducer from'./githubReducer';import{SEARCH_USERS,GET_USER,CLEAR_USERS,GET_REPOS,SET_LOADING}from'../types';var gitHubClientId;var gitHubClientSecret;if(process.env.NODE_ENV!=='production'){gitHubClientId=process.env.REACT_APP_GITHUB_CLIENT_ID;gitHubClientSecret=process.env.REACT_APP_GITHUB_CLIENT_SECRET;}else{gitHubClientId=process.env.GITHUB_CLIENT_ID;gitHubClientSecret=process.env.GITHUB_CLIENT_SECRET;}var GithubState=function GithubState(props){var initialState={users:[],user:{},repos:[],loading:false};var _useReducer=useReducer(GitHubReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// async componentDidMount() {\n//   this.setState({ loading: true });\n//   const res = await axios.get(\n//     `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n//   );\n//   this.setState({ users: res.data, loading: false });\n// }\n//Search Users\nvar searchUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(text){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading();_context.next=3;return axios.get(\"https://api.github.com/search/users?q=\".concat(text,\"&client_id=\").concat(gitHubClientId,\"&client_secret=\").concat(gitHubClientSecret));case 3:res=_context.sent;dispatch({type:SEARCH_USERS,payload:res.data.items});case 5:case\"end\":return _context.stop();}}},_callee);}));return function searchUsers(_x){return _ref.apply(this,arguments);};}();//Get User\nvar getUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userName){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading();_context2.next=3;return axios.get(\"https://api.github.com/users/\".concat(userName,\"?client_id=\").concat(gitHubClientId,\"&client_secret=\").concat(gitHubClientSecret));case 3:res=_context2.sent;dispatch({type:GET_USER,payload:res.data});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function getUser(_x2){return _ref2.apply(this,arguments);};}();//Get Repos\nvar getUserRepos=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(userName){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setLoading();_context3.next=3;return axios.get(\"https://api.github.com/users/\".concat(userName,\"/repos?per_page=5&sort=created:asc&client_id=\").concat(gitHubClientId,\"&client_secret=\").concat(gitHubClientSecret));case 3:res=_context3.sent;dispatch({type:GET_REPOS,payload:res.data});case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function getUserRepos(_x3){return _ref3.apply(this,arguments);};}();// Clear Users\nvar clearUsers=function clearUsers(){dispatch({type:CLEAR_USERS});};//Set Loading\nvar setLoading=function setLoading(){return dispatch({type:SET_LOADING});};return React.createElement(GitHubContext.Provider,{value:{users:state.users,user:state.user,repos:state.repos,loading:state.loading,searchUsers:searchUsers,clearUsers:clearUsers,getUser:getUser,getUserRepos:getUserRepos}},props.children);};export default GithubState;","map":{"version":3,"sources":["/Users/alexb/gihub-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GitHubContext","GitHubReducer","SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","gitHubClientId","gitHubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","get","res","type","payload","data","items","getUser","userName","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GitHubContext from './githubContext';\nimport GitHubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  GET_USER,\n  CLEAR_USERS,\n  GET_REPOS,\n  SET_LOADING\n} from '../types';\n\nlet gitHubClientId;\nlet gitHubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  gitHubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  gitHubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  gitHubClientId = process.env.GITHUB_CLIENT_ID;\n  gitHubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const [state, dispatch] = useReducer(GitHubReducer, initialState);\n\n  // async componentDidMount() {\n  //   this.setState({ loading: true });\n\n  //   const res = await axios.get(\n  //     `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n  //   );\n\n  //   this.setState({ users: res.data, loading: false });\n  // }\n\n  //Search Users\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${gitHubClientId}&client_secret=${gitHubClientSecret}`\n    );\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  };\n\n  //Get User\n  const getUser = async userName => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${userName}?client_id=${gitHubClientId}&client_secret=${gitHubClientSecret}`\n    );\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  };\n\n  //Get Repos\n  const getUserRepos = async userName => {\n    setLoading();\n\n    const res = await axios.get(\n      `https://api.github.com/users/${userName}/repos?per_page=5&sort=created:asc&client_id=${gitHubClientId}&client_secret=${gitHubClientSecret}`\n    );\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  };\n\n  // Clear Users\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS\n    });\n  };\n\n  //Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  return (\n    <GitHubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos\n      }}\n    >\n      {props.children}\n    </GitHubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}